generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id               String   @id @default(auto()) @map("_id") @db.ObjectId
  email            String   @unique
  password         String
  username         String?  @unique
  fullName         String?
  description      String?
  profileImage     String?
  isProfileInfoSet Boolean? @default(false)
  createdAt        DateTime @default(now())
  gigs             Gigs[]
  orders           Orders[]
  reviews          Reviews[]
  messagesSent     Message[] @relation("sentMessages")
  messagesReceived Message[] @relation("receivedMessages")
}

model Gigs {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String 
  description String
  category    String
  deliveryTime Int
  revisions    Int
  features    String[]
  price       Int
  shortDesc   String
  createdAt   DateTime @default(now())
  images      String[]
  createdBy   User     @relation(fields: [userId], references: [id])
  userId      String   // Changed from Int to String
  orders      Orders[]
  reviews     Reviews[]
}

model Orders {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt     DateTime @default(now())
  buyer         User     @relation(fields: [buyerId], references: [id])
  buyerId       String
  paymentIntent  String   @unique
  isCompleted   Boolean   @default(false)
  gig           Gigs      @relation(fields: [gigId], references: [id])
  gigId        String
  price         Int
  messages      Message[]
}

model Reviews {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt   DateTime @default(now())
  rating      Int
  reviewText  String?
  gig         Gigs     @relation(fields: [gigId], references: [id])
  gigId      String
  reviewer    User     @relation(fields: [reviewerId], references: [id])
  reviewerId  String
}

model Message {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  text        String
  createdAt   DateTime @default(now())
  isRead      Boolean  @default(false)
  sender      User     @relation("sentMessages", fields: [senderId], references: [id])
  senderId    String
  recipient   User     @relation("receivedMessages", fields: [recipientId], references: [id])
  recipientId String
  order       Orders   @relation(fields: [orderId], references: [id])
  orderId     String
}
